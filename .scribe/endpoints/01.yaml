name: 'Kebab management'
description: |-

  APIs for managing kebab and kebab details
endpoints:
  -
    httpMethods:
      - GET
    uri: api/kebab/showAll
    metadata:
      groupName: 'Kebab management'
      groupDescription: |-

        APIs for managing kebab and kebab details
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"status":true,"message":"List of Kebabs","data":[]}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/kebab/show/{id}'
    metadata:
      groupName: 'Kebab management'
      groupDescription: |-

        APIs for managing kebab and kebab details
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the show.'
        required: true
        example: aut
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      id: aut
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 404
        content: '{"status":false,"message":"Kebab not found"}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/kebab/details/{id}'
    metadata:
      groupName: 'Kebab management'
      groupDescription: |-

        APIs for managing kebab and kebab details
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the detail.'
        required: true
        example: qui
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      id: qui
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 404
        content: '{"status":false,"message":"Kebab details not found"}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/kebab/add
    metadata:
      groupName: 'Kebab management'
      groupDescription: |-

        APIs for managing kebab and kebab details
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      name:
        name: name
        description: 'Fields for kebab table. Must not be greater than 255 characters.'
        required: true
        example: pskykzcbavbsqydgkzsl
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      logo:
        name: logo
        description: ''
        required: false
        example: rerum
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      address:
        name: address
        description: ''
        required: true
        example: ut
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      latitude:
        name: latitude
        description: ''
        required: true
        example: 569546955.71666
        type: number
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      longitude:
        name: longitude
        description: ''
        required: true
        example: 300081.0
        type: number
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      year_opened:
        name: year_opened
        description: ''
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      year_closed:
        name: year_closed
        description: ''
        required: false
        example: 15
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      opening_hours:
        name: opening_hours
        description: 'Fields for kebab_details table. Must be a valid JSON string.'
        required: true
        example: '["quo","voluptate"]'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      meat_types:
        name: meat_types
        description: 'Must be a valid JSON string.'
        required: true
        example: '["qui","quia"]'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      sauces:
        name: sauces
        description: 'Must be a valid JSON string.'
        required: true
        example: '["voluptatem","eveniet"]'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      status:
        name: status
        description: ''
        required: false
        example: numquam
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      is_craft:
        name: is_craft
        description: ''
        required: false
        example: true
        type: boolean
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      is_in_stall:
        name: is_in_stall
        description: ''
        required: false
        example: true
        type: boolean
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      is_chain_member:
        name: is_chain_member
        description: ''
        required: false
        example: true
        type: boolean
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      ordering_options:
        name: ordering_options
        description: 'Must be a valid JSON string.'
        required: true
        example: '["quisquam","similique"]'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanBodyParameters:
      name: pskykzcbavbsqydgkzsl
      logo: rerum
      address: ut
      latitude: 569546955.71666
      longitude: 300081.0
      year_opened: 1
      year_closed: 15
      opening_hours: '["quo","voluptate"]'
      meat_types: '["qui","quia"]'
      sauces: '["voluptatem","eveniet"]'
      status: numquam
      is_craft: true
      is_in_stall: true
      is_chain_member: true
      ordering_options: '["quisquam","similique"]'
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PUT
    uri: 'api/kebab/update/{id}'
    metadata:
      groupName: 'Kebab management'
      groupDescription: |-

        APIs for managing kebab and kebab details
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the update.'
        required: true
        example: voluptas
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      id: voluptas
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      name:
        name: name
        description: 'Must not be greater than 255 characters.'
        required: true
        example: fkizjoqgonyt
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      logo:
        name: logo
        description: ''
        required: false
        example: sint
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      address:
        name: address
        description: ''
        required: true
        example: temporibus
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      latitude:
        name: latitude
        description: ''
        required: true
        example: 1913841.8
        type: number
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      longitude:
        name: longitude
        description: ''
        required: true
        example: 55548.2
        type: number
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      year_opened:
        name: year_opened
        description: ''
        required: true
        example: 17
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      year_closed:
        name: year_closed
        description: ''
        required: false
        example: 13
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      opening_hours:
        name: opening_hours
        description: 'Must be a valid JSON string.'
        required: true
        example: '["est","quis"]'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      meat_types:
        name: meat_types
        description: 'Must be a valid JSON string.'
        required: true
        example: '["autem","eveniet"]'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      sauces:
        name: sauces
        description: 'Must be a valid JSON string.'
        required: true
        example: '["ea","aut"]'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      status:
        name: status
        description: ''
        required: false
        example: consectetur
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      is_craft:
        name: is_craft
        description: ''
        required: false
        example: false
        type: boolean
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      is_in_stall:
        name: is_in_stall
        description: ''
        required: false
        example: true
        type: boolean
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      is_chain_member:
        name: is_chain_member
        description: ''
        required: false
        example: false
        type: boolean
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      ordering_options:
        name: ordering_options
        description: 'Must be a valid JSON string.'
        required: true
        example: '["provident","similique"]'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanBodyParameters:
      name: fkizjoqgonyt
      logo: sint
      address: temporibus
      latitude: 1913841.8
      longitude: 55548.2
      year_opened: 17
      year_closed: 13
      opening_hours: '["est","quis"]'
      meat_types: '["autem","eveniet"]'
      sauces: '["ea","aut"]'
      status: consectetur
      is_craft: false
      is_in_stall: true
      is_chain_member: false
      ordering_options: '["provident","similique"]'
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: 'api/kebab/delete/{id}'
    metadata:
      groupName: 'Kebab management'
      groupDescription: |-

        APIs for managing kebab and kebab details
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the delete.'
        required: true
        example: ea
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      id: ea
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: 'api/kebab/{id}/fav'
    metadata:
      groupName: 'Kebab management'
      groupDescription: |-

        APIs for managing kebab and kebab details
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the kebab.'
        required: true
        example: 12
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      id: 12
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: 'api/kebab/{id}/favdelete'
    metadata:
      groupName: 'Kebab management'
      groupDescription: |-

        APIs for managing kebab and kebab details
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the kebab.'
        required: true
        example: 16
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      id: 16
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/kebab/filter
    metadata:
      groupName: 'Kebab management'
      groupDescription: |-

        APIs for managing kebab and kebab details
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
