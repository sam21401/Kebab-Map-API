openapi: 3.0.3
info:
  title: Laravel
  description: ''
  version: 1.0.0
servers:
  -
    url: 'http://localhost'
paths:
  /api/register:
    post:
      summary: ''
      operationId: postApiRegister
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      security: []
  /api/login:
    post:
      summary: ''
      operationId: postApiLogin
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      security: []
  /api/profile:
    get:
      summary: ''
      operationId: getApiProfile
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      security: []
  '/api/user/{id}':
    get:
      summary: ''
      operationId: getApiUserId
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the user.'
        example: et
        required: true
        schema:
          type: string
  /api/logout:
    get:
      summary: ''
      operationId: getApiLogout
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      security: []
  /api/change-password:
    post:
      summary: ''
      operationId: postApiChangePassword
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      security: []
  /api/admin:
    get:
      summary: ''
      operationId: getApiAdmin
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      security: []
  /api/suggest/add:
    post:
      summary: ''
      operationId: postApiSuggestAdd
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                subject:
                  type: string
                  description: 'Must not be greater than 1000 characters.'
                  example: eayaqkbitnsivnkjyfriamoq
                  nullable: false
              required:
                - subject
      security: []
  /api/suggest:
    get:
      summary: ''
      operationId: getApiSuggest
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      security: []
  '/api/suggest/{id}/reviewed':
    put:
      summary: ''
      operationId: putApiSuggestIdReviewed
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the suggest.'
        example: explicabo
        required: true
        schema:
          type: string
  '/api/suggest/{id}':
    delete:
      summary: ''
      operationId: deleteApiSuggestId
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the suggest.'
        example: et
        required: true
        schema:
          type: string
  /api/kebab/showAll:
    get:
      summary: ''
      operationId: getApiKebabShowAll
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      security: []
  '/api/kebab/show/{id}':
    get:
      summary: ''
      operationId: getApiKebabShowId
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the show.'
        example: eos
        required: true
        schema:
          type: string
  /api/kebab/add:
    post:
      summary: ''
      operationId: postApiKebabAdd
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'Must not be greater than 255 characters.'
                  example: wwwgdofwhlocdcdjwfygimh
                  nullable: false
                logo:
                  type: string
                  description: ''
                  example: rerum
                  nullable: true
                address:
                  type: string
                  description: ''
                  example: voluptatem
                  nullable: false
                latitude:
                  type: number
                  description: ''
                  example: 1982.0
                  nullable: false
                longitude:
                  type: number
                  description: ''
                  example: 96309.374504
                  nullable: false
                year_opened:
                  type: integer
                  description: ''
                  example: 13
                  nullable: false
                year_closed:
                  type: integer
                  description: ''
                  example: 1
                  nullable: true
                opening_hours:
                  type: string
                  description: 'Must be a valid JSON string.'
                  example: '["quas","ut"]'
                  nullable: false
                meat_types:
                  type: string
                  description: 'Must be a valid JSON string.'
                  example: '["nostrum","reiciendis"]'
                  nullable: false
                sauces:
                  type: string
                  description: 'Must be a valid JSON string.'
                  example: '["id","dignissimos"]'
                  nullable: false
                status:
                  type: string
                  description: ''
                  example: quaerat
                  nullable: true
                is_craft:
                  type: boolean
                  description: ''
                  example: true
                  nullable: false
                is_in_stall:
                  type: boolean
                  description: ''
                  example: true
                  nullable: false
                is_chain_member:
                  type: boolean
                  description: ''
                  example: false
                  nullable: false
                ordering_options:
                  type: string
                  description: 'Must be a valid JSON string.'
                  example: '["ea","laboriosam"]'
                  nullable: false
              required:
                - name
                - address
                - latitude
                - longitude
                - year_opened
                - opening_hours
                - meat_types
                - sauces
                - ordering_options
      security: []
  '/api/kebab/update/{id}':
    put:
      summary: ''
      operationId: putApiKebabUpdateId
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'Must not be greater than 255 characters.'
                  example: fdayzjtzgyzjsaylneb
                  nullable: false
                logo:
                  type: string
                  description: ''
                  example: repellat
                  nullable: true
                address:
                  type: string
                  description: ''
                  example: occaecati
                  nullable: false
                latitude:
                  type: number
                  description: ''
                  example: 8435219.78
                  nullable: false
                longitude:
                  type: number
                  description: ''
                  example: 7.626
                  nullable: false
                year_opened:
                  type: integer
                  description: ''
                  example: 2
                  nullable: false
                year_closed:
                  type: integer
                  description: ''
                  example: 7
                  nullable: false
                opening_hours:
                  type: string
                  description: 'Must be a valid JSON string.'
                  example: '["repellat","nemo"]'
                  nullable: false
                meat_types:
                  type: string
                  description: 'Must be a valid JSON string.'
                  example: '["placeat","et"]'
                  nullable: false
                sauces:
                  type: string
                  description: 'Must be a valid JSON string.'
                  example: '["totam","explicabo"]'
                  nullable: false
                status:
                  type: string
                  description: ''
                  example: est
                  nullable: true
                is_craft:
                  type: boolean
                  description: ''
                  example: false
                  nullable: false
                is_in_stall:
                  type: boolean
                  description: ''
                  example: false
                  nullable: false
                is_chain_member:
                  type: boolean
                  description: ''
                  example: true
                  nullable: false
                ordering_options:
                  type: string
                  description: 'Must be a valid JSON string.'
                  example: '["omnis","itaque"]'
                  nullable: false
              required:
                - name
                - address
                - latitude
                - longitude
                - year_opened
                - opening_hours
                - meat_types
                - sauces
                - ordering_options
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the update.'
        example: modi
        required: true
        schema:
          type: string
  '/api/kebab/delete/{id}':
    delete:
      summary: ''
      operationId: deleteApiKebabDeleteId
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the delete.'
        example: est
        required: true
        schema:
          type: string
  '/api/kebab/details/{id}':
    get:
      summary: ''
      operationId: getApiKebabDetailsId
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the detail.'
        example: porro
        required: true
        schema:
          type: string
tags:
  -
    name: Endpoints
    description: ''
